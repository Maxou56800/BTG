#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright (c) 2017 Conix Cybersecurity
# Copyright (c) 2018 Tanguy Becam
#
# This file is part of BTG.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

import csv
import requests

from BTG.lib.cache import Cache
from BTG.lib.io import module as mod


class malwareconfig():
    """
        This module performs a crawling for MalwareConfig.com
    """
    def __init__(self, ioc, type, config, queues):
        self.config = config
        self.module_name = __name__.split(".")[-1]
        self.types = ["MD5"]
        self.search_method = "Online"
        self.description = "Search IOC in MalwareConfig database"
        self.author = "Conix"
        self.creation_date = "31-05-2018"
        self.type = type
        self.ioc = ioc

        self.search()


    def research_finished(self):
        mod.display(self.module_name,
                        self.ioc,
                        "FINISHED")
        return


    def search(self):
        mod.display(self.module_name,
                    self.ioc,
                    "INFO",
                    "Search in MalwareConfig ...")
        self.webpage_crawling()

    # API is broken on May,31st,2018
    # so we do some web page crawling or caching search instead
    def webpage_crawling(self):
        url = "https://malwareconfig.com/config/"

        try:
            response = requests.get(f"{url}{self.ioc}")
        except requests.exceptions.ConnectTimeout:
            mod.display(self.module_name,
                        self.ioc,
                        "ERROR",
                        "MalwareConfig timed out."
            )
            self.research_finished()
            return None

        if response.status_code == 404:
            mod.display(self.module_name,
                        self.ioc,
                        "NOT_FOUND",
                        "Nothing found in MalwareConfig"
            )
            self.research_finished()
            return None
        if response.status_code == 200:
            if response.text.find("There doesnt seem to be anything here.") != -1:
                mod.display(self.module_name,
                            self.ioc,
                            "NOT_FOUND",
                            "Nothing found in MalwareConfig")
                self.research_finished()
                return None
            else:
                mod.display(self.module_name,
                            self.ioc,
                            "FOUND",
                            url+self.ioc)
                self.research_finished()
                return None
        else:
            mod.display(self.module_name,
                        self.ioc,
                        "ERROR",
                        "MalwareConfig API connection status %d" % response.status_code)
            self.research_finished()
            return None


